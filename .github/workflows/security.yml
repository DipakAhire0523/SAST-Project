name: Security Pipeline

on:
  push:
    branches: [ main, feature ]
  pull_request:
    branches: [ main, feature ]

jobs:
  security:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        rm -rf node_modules package-lock.json
        npm install
        npm ci
    
    # 1. Dependency Scanning
    - name: Check for vulnerable dependencies
      run: npm audit --force
    
    # 2. Security Linting (commented out)
    # - name: Install ESLint and plugins
    #   run: npm install --save-dev eslint eslint-plugin-security eslint-plugin-node
  
    # - name: Run security linting
    #   run: npm run lint:security
    
    # 3. Secret Scanning
    - name: Scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.pull_request.base.sha || '' }}
        head: ${{ github.event.pull_request.head.sha || '' }}
    
    # 4. Static Code Analysis
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v3
    
    # 5. Docker Container Scanning
    - name: Build Docker image
      run: docker build -t security-scan:latest .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'security-scan:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
